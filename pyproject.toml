# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "onnx-script"
version = "0.1"
description = "Authoring ONNX functions in Python"
authors = [{ name = "Microsoft Corporation", email = "onnx@microsoft.com" }]
# TODO: put url/longer description into here
# Get rid of longer description seems to require Poetry
readme = "README.md"
requires-python = ">=3.7"
license = { text = 'Apache License v2.0' }
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: Apache Software License",
]
# NOTE: replace requirements.txt
dependencies = ["numpy>=1.21.5", "protobuf<4", "onnx"]

[project.optional-dependencies]
test = ["flake8", "mypy", "black", "isort[colors]", "pylint"]

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
filterwarnings = ["ignore::UserWarning", "ignore::DeprecationWarning"]

[tool.mypy]
strict_optional = true
warn_return_any = true
warn_no_return = true
# TODO warn_unused_ignores = true
warn_redundant_casts = true
warn_incomplete_stub = true
# TODO disallow_untyped_calls = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
# TODO disallow_incomplete_defs = true
# TODO disallow_subclassing_any = true
disallow_untyped_decorators = true
warn_unused_configs = true
show_error_codes = true
show_column_numbers = true


[[tool.mypy.overrides]]
module = "tools.*"
disallow_untyped_defs = true

# Ignore errors in test
[[tool.mypy.overrides]]
module = [
  "setup",
  "onnxscript.test.models.*",
  "onnxscript.test.onnx_backend_test_code.*",
]
ignore_errors = true

[tool.black]
target-version = ["py37", "py38", "py39", "py310"]
# Black's extend-exclude needs to be a regex string
extend-exclude = "/onnxscript/test|/onnxscript/backend"
line-length = 95

[tool.isort]
profile = "black"
extend_skip_glob = [
  "onnxscript/test/models/*.py",
  "onnxscript/test/onnx_backend_test_code/*.py",
  "onnxscript/backend/",
]

[tool.pylint.master]
ignore-paths = [
  "^onnxscript/test/models/",
  "^onnxscript/test/onnx_backend_test_code/",
]

[tool.pylint.messages_control]
disable = [
  "missing-docstring",
  "import-error",
  "no-member",
  "line-too-long",
  "fixme",
  "too-few-public-methods",
  "no-name-in-module",
  "invalid-name",                   # TODO: Add naming guidance and enable this check.
  "too-many-locals",
  "too-many-arguments",
  "too-many-statements",            # TODO: we should work on these: too-many-xxx series
  "too-many-instance-attributes",
  "too-many-branches",
  "too-many-lines",
  "too-many-public-methods",
  "too-many-return-statements",
  "too-many-function-args",
  "attribute-defined-outside-init", # TODO: mostly in onnxscript/converter.py
  "redefined-builtin",              # TODO: should we avoid redefined-builtin?
]
